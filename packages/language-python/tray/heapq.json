{
  "category": "heapq",
  "entries": [
    {
      "key": "heapq.heapify",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "heapify"
        },
        "meta": {
          "params": [
            "__heap"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "heapq"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "heapq.heappop",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "heappop"
        },
        "meta": {
          "params": [
            "__heap"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "heapq"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "heapq.heappush",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "heappush"
        },
        "meta": {
          "params": [
            "__heap",
            "__item"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "heapq"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "heapq.heappushpop",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "heappushpop"
        },
        "meta": {
          "params": [
            "__heap",
            "__item"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "heapq"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "heapq.heapreplace",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "heapreplace"
        },
        "meta": {
          "params": [
            "__heap",
            "__item"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "heapq"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "heapq.merge",
      "abstract": "Merge multiple sorted inputs into a single sorted output.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "merge"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "heapq"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "heapq.nlargest",
      "abstract": "Find the n largest elements in a dataset.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "nlargest"
        },
        "meta": {
          "params": [
            "n",
            "iterable",
            "key"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "heapq"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "heapq.nsmallest",
      "abstract": "Find the n smallest elements in a dataset.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "nsmallest"
        },
        "meta": {
          "params": [
            "n",
            "iterable",
            "key"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "heapq"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    }
  ]
}