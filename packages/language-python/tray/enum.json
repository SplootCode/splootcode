{
  "category": "enum",
  "entries": [
    {
      "key": "enum.EnumMeta",
      "abstract": "    Metaclass for Enum",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "EnumMeta"
        },
        "meta": {
          "params": [
            "cls",
            "bases",
            "classdict"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "enum"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "enum.Enum",
      "abstract": "    Generic enumeration.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Enum"
        },
        "meta": {
          "params": [
            "value"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "enum"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "enum.IntEnum",
      "abstract": "Enum where members are also (and must be) ints",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "IntEnum"
        },
        "meta": {
          "params": [
            "value"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "enum"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "enum.unique",
      "abstract": "    Class decorator for enumerations ensuring unique member values.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "unique"
        },
        "meta": {
          "params": [
            "enumeration"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "enum"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "enum.auto",
      "abstract": "    Instances are replaced with an appropriate value in Enum class suites.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "auto"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "enum"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "enum.Flag",
      "abstract": "    Support for flags",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Flag"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "enum"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "enum.IntFlag",
      "abstract": "    Support for integer-based Flags",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "IntFlag"
        },
        "meta": {
          "params": [
            "value"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "enum"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    }
  ]
}