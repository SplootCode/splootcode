{
  "category": "codecs",
  "entries": [
    {
      "key": "codecs.BOM32_BE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM32_BE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM32_LE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM32_LE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM64_BE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM64_BE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM64_LE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM64_LE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.encode",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "encode"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.decode",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "decode"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.lookup",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "lookup"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.utf_16_be_decode",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "utf_16_be_decode"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.utf_16_be_encode",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "utf_16_be_encode"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.CodecInfo",
      "abstract": "Codec details when looking up the codec registry",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "CodecInfo"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.getencoder",
      "abstract": " Lookup up the codec for the given encoding and return",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getencoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.getdecoder",
      "abstract": " Lookup up the codec for the given encoding and return",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getdecoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.getincrementalencoder",
      "abstract": " Lookup up the codec for the given encoding and return",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getincrementalencoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.getincrementaldecoder",
      "abstract": " Lookup up the codec for the given encoding and return",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getincrementaldecoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.getreader",
      "abstract": " Lookup up the codec for the given encoding and return",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getreader"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.getwriter",
      "abstract": " Lookup up the codec for the given encoding and return",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getwriter"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.register",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "register"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.open",
      "abstract": " Open an encoded file using the given mode and return",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "open"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.EncodedFile",
      "abstract": " Return a wrapped version of file which provides transparent",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "EncodedFile"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.iterencode",
      "abstract": "    Encoding iterator.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "iterencode"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.iterdecode",
      "abstract": "    Decoding iterator.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "iterdecode"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.unregister",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "unregister"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM_BE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM_BE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM_LE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM_LE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM_UTF8",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM_UTF8"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM_UTF16_BE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM_UTF16_BE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM_UTF16_LE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM_UTF16_LE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM_UTF32_BE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM_UTF32_BE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BOM_UTF32_LE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "BOM_UTF32_LE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.register_error",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "register_error"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.lookup_error",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "lookup_error"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.strict_errors",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "strict_errors"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.replace_errors",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "replace_errors"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.ignore_errors",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ignore_errors"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.xmlcharrefreplace_errors",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "xmlcharrefreplace_errors"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.backslashreplace_errors",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "backslashreplace_errors"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.namereplace_errors",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "namereplace_errors"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.Codec",
      "abstract": " Defines the interface for stateless encoders/decoders.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Codec"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.IncrementalEncoder",
      "abstract": "    An IncrementalEncoder encodes an input in multiple steps. The input can",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "IncrementalEncoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.IncrementalDecoder",
      "abstract": "    An IncrementalDecoder decodes an input in multiple steps. The input can",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "IncrementalDecoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BufferedIncrementalEncoder",
      "abstract": "    This subclass of IncrementalEncoder can be used as the baseclass for an",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "BufferedIncrementalEncoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.BufferedIncrementalDecoder",
      "abstract": "    This subclass of IncrementalDecoder can be used as the baseclass for an",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "BufferedIncrementalDecoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.StreamWriter",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "StreamWriter"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.StreamReader",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "StreamReader"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.StreamReaderWriter",
      "abstract": " StreamReaderWriter instances allow wrapping streams which",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "StreamReaderWriter"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "codecs.StreamRecoder",
      "abstract": " StreamRecoder instances translate data from one encoding to another.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "StreamRecoder"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "codecs"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    }
  ]
}