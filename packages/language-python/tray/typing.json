{
  "category": "typing",
  "entries": [
    {
      "key": "typing.TypeVar",
      "abstract": "Type variable.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "TypeVar"
        },
        "meta": {
          "params": [
            "name"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.overload",
      "abstract": "Decorator for overloaded functions/methods.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "overload"
        },
        "meta": {
          "params": [
            "func"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.Union",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Union"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Generic",
      "abstract": "Abstract base class for generic types.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Generic"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Protocol",
      "abstract": "Base class for protocol classes.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Protocol"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Callable",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Callable"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Type",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Type"
        },
        "meta": {
          "params": [
            "__o"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.NoReturn",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "NoReturn"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Optional",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Optional"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Tuple",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Tuple"
        },
        "meta": {
          "params": [
            "__iterable"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.ClassVar",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ClassVar"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Final",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Final"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.final",
      "abstract": "A decorator to indicate final methods and final classes.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "final"
        },
        "meta": {
          "params": [
            "f"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.Literal",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Literal"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.TypedDict",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "TypedDict"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.ParamSpecArgs",
      "abstract": "The args for a ParamSpec object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ParamSpecArgs"
        },
        "meta": {
          "params": [
            "origin"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.ParamSpecKwargs",
      "abstract": "The kwargs for a ParamSpec object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ParamSpecKwargs"
        },
        "meta": {
          "params": [
            "origin"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.ParamSpec",
      "abstract": "Parameter specification variable.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ParamSpec"
        },
        "meta": {
          "params": [
            "name"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.Concatenate",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Concatenate"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.TypeAlias",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "TypeAlias"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.TypeGuard",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "TypeGuard"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.NewType",
      "abstract": "NewType creates simple unique types with almost zero",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "NewType"
        },
        "meta": {
          "params": [
            "name",
            "tp"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.no_type_check",
      "abstract": "Decorator to indicate that annotations are not type hints.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "no_type_check"
        },
        "meta": {
          "params": [
            "arg"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.no_type_check_decorator",
      "abstract": "Decorator to give another decorator the @no_type_check effect.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "no_type_check_decorator"
        },
        "meta": {
          "params": [
            "decorator"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.List",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "List"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Dict",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Dict"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.DefaultDict",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "DefaultDict"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Set",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Set"
        },
        "meta": {
          "params": [
            "__iterable"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.FrozenSet",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "FrozenSet"
        },
        "meta": {
          "params": [
            "__iterable"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.Counter",
      "abstract": "Dict subclass for counting hashable items.  Sometimes called a bag",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Counter"
        },
        "meta": {
          "params": [
            "__iterable"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.Deque",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Deque"
        },
        "meta": {
          "params": [
            "iterable",
            "maxlen"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.ChainMap",
      "abstract": " A ChainMap groups multiple dicts (or other mappings) together",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ChainMap"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.OrderedDict",
      "abstract": "Dictionary that remembers insertion order",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "OrderedDict"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Annotated",
      "abstract": "Add context specific metadata to a type.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Annotated"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.runtime_checkable",
      "abstract": "Mark a protocol class as a runtime protocol.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "runtime_checkable"
        },
        "meta": {
          "params": [
            "cls"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.SupportsInt",
      "abstract": "An ABC with one abstract method __int__.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "SupportsInt"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.SupportsFloat",
      "abstract": "An ABC with one abstract method __float__.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "SupportsFloat"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.SupportsComplex",
      "abstract": "An ABC with one abstract method __complex__.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "SupportsComplex"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.SupportsBytes",
      "abstract": "An ABC with one abstract method __bytes__.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "SupportsBytes"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.SupportsIndex",
      "abstract": "An ABC with one abstract method __index__.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "SupportsIndex"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.SupportsAbs",
      "abstract": "An ABC with one abstract method __abs__ that is covariant in its return type.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "SupportsAbs"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.SupportsRound",
      "abstract": "An ABC with one abstract method __round__ that is covariant in its return type.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "SupportsRound"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Sized",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Sized"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Hashable",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Hashable"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Iterable",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Iterable"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Iterator",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Iterator"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Reversible",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Reversible"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Generator",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Generator"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Awaitable",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Awaitable"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Coroutine",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Coroutine"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.AwaitableGenerator",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "AwaitableGenerator"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.AsyncIterable",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "AsyncIterable"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.AsyncIterator",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "AsyncIterator"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.AsyncGenerator",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "AsyncGenerator"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Container",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Container"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Collection",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Collection"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Sequence",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Sequence"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.MutableSequence",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "MutableSequence"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.AbstractSet",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "AbstractSet"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.MutableSet",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "MutableSet"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.MappingView",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "MappingView"
        },
        "meta": {
          "params": [
            "mapping"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.ItemsView",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ItemsView"
        },
        "meta": {
          "params": [
            "mapping"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.KeysView",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "KeysView"
        },
        "meta": {
          "params": [
            "mapping"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.ValuesView",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ValuesView"
        },
        "meta": {
          "params": [
            "mapping"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.ContextManager",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ContextManager"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.AsyncContextManager",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "AsyncContextManager"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Mapping",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Mapping"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.MutableMapping",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "MutableMapping"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Text",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Text"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.TYPE_CHECKING",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "TYPE_CHECKING"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.IO",
      "abstract": "Generic base class for TextIO and BinaryIO.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "IO"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.BinaryIO",
      "abstract": "Typed version of the return of open() in binary mode.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "BinaryIO"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.TextIO",
      "abstract": "Typed version of the return of open() in text mode.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "TextIO"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.ByteString",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ByteString"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Match",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Match"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.Pattern",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Pattern"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "typing.get_type_hints",
      "abstract": "Return type hints for an object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "get_type_hints"
        },
        "meta": {
          "params": [
            "obj",
            "globalns",
            "localns",
            "include_extras"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.get_origin",
      "abstract": "Get the unsubscripted version of a type.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "get_origin"
        },
        "meta": {
          "params": [
            "tp"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.get_args",
      "abstract": "Get type arguments with all substitutions performed.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "get_args"
        },
        "meta": {
          "params": [
            "tp"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.cast",
      "abstract": "Cast a value to a type.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "cast"
        },
        "meta": {
          "params": [
            "typ",
            "val"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.NamedTuple",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "NamedTuple"
        },
        "meta": {
          "params": [
            "typename",
            "fields"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.type_check_only",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "type_check_only"
        },
        "meta": {
          "params": [
            "func_or_cls"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.ForwardRef",
      "abstract": "Internal wrapper to hold a forward reference.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ForwardRef"
        },
        "meta": {
          "params": [
            "arg",
            "is_argument",
            "module"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "typing.is_typeddict",
      "abstract": "Check if an annotation is a TypedDict class",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "is_typeddict"
        },
        "meta": {
          "params": [
            "tp"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "typing"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    }
  ]
}