{
  "category": "inspect",
  "entries": [
    {
      "key": "inspect.EndOfBlock",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "EndOfBlock"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.BlockFinder",
      "abstract": "Provide a tokeneater() method to detect the end of a code block.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "BlockFinder"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.CO_OPTIMIZED",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_OPTIMIZED"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_NEWLOCALS",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_NEWLOCALS"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_VARARGS",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_VARARGS"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_VARKEYWORDS",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_VARKEYWORDS"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_NESTED",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_NESTED"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_GENERATOR",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_GENERATOR"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_NOFREE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_NOFREE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_COROUTINE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_COROUTINE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_ITERABLE_COROUTINE",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_ITERABLE_COROUTINE"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CO_ASYNC_GENERATOR",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CO_ASYNC_GENERATOR"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.TPFLAGS_IS_ABSTRACT",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "TPFLAGS_IS_ABSTRACT"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.modulesbyfile",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "modulesbyfile"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getmembers",
      "abstract": "Return all members of an object as (name, value) pairs sorted by name.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getmembers"
        },
        "meta": {
          "params": [
            "object",
            "predicate"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getmodulename",
      "abstract": "Return the module name for a given file, or None.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getmodulename"
        },
        "meta": {
          "params": [
            "path"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.ismodule",
      "abstract": "Return true if the object is a module.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ismodule"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isclass",
      "abstract": "Return true if the object is a class.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isclass"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.ismethod",
      "abstract": "Return true if the object is an instance method.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ismethod"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isfunction",
      "abstract": "Return true if the object is a user-defined function.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isfunction"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isgeneratorfunction",
      "abstract": "Return true if the object is a user-defined generator function.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isgeneratorfunction"
        },
        "meta": {
          "params": [
            "obj"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.iscoroutinefunction",
      "abstract": "Return true if the object is a coroutine function.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "iscoroutinefunction"
        },
        "meta": {
          "params": [
            "obj"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isgenerator",
      "abstract": "Return true if the object is a generator.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isgenerator"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.iscoroutine",
      "abstract": "Return true if the object is a coroutine.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "iscoroutine"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isawaitable",
      "abstract": "Return true if object can be passed to an ``await`` expression.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isawaitable"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isasyncgenfunction",
      "abstract": "Return true if the object is an asynchronous generator function.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isasyncgenfunction"
        },
        "meta": {
          "params": [
            "obj"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isasyncgen",
      "abstract": "Return true if the object is an asynchronous generator.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isasyncgen"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.istraceback",
      "abstract": "Return true if the object is a traceback.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "istraceback"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isframe",
      "abstract": "Return true if the object is a frame object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isframe"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.iscode",
      "abstract": "Return true if the object is a code object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "iscode"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isbuiltin",
      "abstract": "Return true if the object is a built-in function or method.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isbuiltin"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isroutine",
      "abstract": "Return true if the object is any kind of function or method.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isroutine"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.ismethoddescriptor",
      "abstract": "Return true if the object is a method descriptor.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ismethoddescriptor"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.ismemberdescriptor",
      "abstract": "Return true if the object is a member descriptor.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ismemberdescriptor"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isabstract",
      "abstract": "Return true if the object is an abstract base class (ABC).",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isabstract"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isgetsetdescriptor",
      "abstract": "Return true if the object is a getset descriptor.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isgetsetdescriptor"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.isdatadescriptor",
      "abstract": "Return true if the object is a data descriptor.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "isdatadescriptor"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.findsource",
      "abstract": "Return the entire source file and starting line number for an object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "findsource"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getabsfile",
      "abstract": "Return an absolute path to the source or compiled file for an object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getabsfile"
        },
        "meta": {
          "params": [
            "object",
            "_filename"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getblock",
      "abstract": "Extract the block of code at the top of the given list of lines.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getblock"
        },
        "meta": {
          "params": [
            "lines"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getdoc",
      "abstract": "Get the documentation string for an object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getdoc"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getcomments",
      "abstract": "Get lines of comments immediately preceding an object's source code.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getcomments"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getfile",
      "abstract": "Work out which source or compiled file an object was defined in.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getfile"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getmodule",
      "abstract": "Return the module an object was defined in, or None if not found.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getmodule"
        },
        "meta": {
          "params": [
            "object",
            "_filename"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getsourcefile",
      "abstract": "Return the filename that can be used to locate an object's source.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getsourcefile"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getsourcelines",
      "abstract": "Return a list of source lines and starting line number for an object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getsourcelines"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getsource",
      "abstract": "Return the text of the source code for an object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getsource"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.cleandoc",
      "abstract": "Clean up indentation from docstrings.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "cleandoc"
        },
        "meta": {
          "params": [
            "doc"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.indentsize",
      "abstract": "Return the indent size, in spaces, at the start of a line of text.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "indentsize"
        },
        "meta": {
          "params": [
            "line"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.signature",
      "abstract": "Get a signature object for the passed callable.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "signature"
        },
        "meta": {
          "params": [
            "obj"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.Signature",
      "abstract": "A Signature object represents the overall signature of a function.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Signature"
        },
        "meta": {
          "params": [
            "parameters"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.get_annotations",
      "abstract": "Compute the annotations dict for an object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "get_annotations"
        },
        "meta": {
          "params": [
            "obj"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.Parameter",
      "abstract": "Represents a parameter in a function signature.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Parameter"
        },
        "meta": {
          "params": [
            "name",
            "kind"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.BoundArguments",
      "abstract": "Result of `Signature.bind` call.  Holds the mapping of arguments",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "BoundArguments"
        },
        "meta": {
          "params": [
            "signature",
            "arguments"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getclasstree",
      "abstract": "Arrange the given list of classes into a hierarchy of nested lists.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getclasstree"
        },
        "meta": {
          "params": [
            "classes",
            "unique"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.walktree",
      "abstract": "Recursive helper function for getclasstree().",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "walktree"
        },
        "meta": {
          "params": [
            "classes",
            "children",
            "parent"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.Arguments",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Arguments"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.getargs",
      "abstract": "Get information about the arguments accepted by a code object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getargs"
        },
        "meta": {
          "params": [
            "co"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.ArgSpec",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ArgSpec"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.getargspec",
      "abstract": "Get the names and default values of a function's parameters.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getargspec"
        },
        "meta": {
          "params": [
            "func"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.FullArgSpec",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "FullArgSpec"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.getfullargspec",
      "abstract": "Get the names and default values of a callable object's parameters.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getfullargspec"
        },
        "meta": {
          "params": [
            "func"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.ArgInfo",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ArgInfo"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.getargvalues",
      "abstract": "Get information about arguments passed into a particular frame.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getargvalues"
        },
        "meta": {
          "params": [
            "frame"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.formatannotation",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "formatannotation"
        },
        "meta": {
          "params": [
            "annotation",
            "base_module"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.formatannotationrelativeto",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "formatannotationrelativeto"
        },
        "meta": {
          "params": [
            "object"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.formatargspec",
      "abstract": "Format an argument spec from the values returned by getfullargspec.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "formatargspec"
        },
        "meta": {
          "params": [
            "args",
            "varargs",
            "varkw",
            "defaults",
            "kwonlyargs",
            "kwonlydefaults",
            "annotations",
            "formatarg",
            "formatvarargs",
            "formatvarkw",
            "formatvalue",
            "formatreturns",
            "formatannotation"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.formatargvalues",
      "abstract": "Format an argument spec from the 4 values returned by getargvalues.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "formatargvalues"
        },
        "meta": {
          "params": [
            "args",
            "varargs",
            "varkw",
            "locals",
            "formatarg",
            "formatvarargs",
            "formatvarkw",
            "formatvalue"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getmro",
      "abstract": "Return tuple of base classes (including cls) in method resolution order.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getmro"
        },
        "meta": {
          "params": [
            "cls"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getcallargs",
      "abstract": "Get the mapping of arguments to values.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getcallargs"
        },
        "meta": {
          "params": [
            "__func"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.ClosureVars",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ClosureVars"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.getclosurevars",
      "abstract": "    Get the mapping of free variables to their current values.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getclosurevars"
        },
        "meta": {
          "params": [
            "func"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.unwrap",
      "abstract": "Get the object wrapped by *func*.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "unwrap"
        },
        "meta": {
          "params": [
            "func"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.Traceback",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Traceback"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.FrameInfo",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "FrameInfo"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.getframeinfo",
      "abstract": "Get information about a frame or traceback object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getframeinfo"
        },
        "meta": {
          "params": [
            "frame",
            "context"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getouterframes",
      "abstract": "Get a list of records for a frame and all higher (calling) frames.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getouterframes"
        },
        "meta": {
          "params": [
            "frame",
            "context"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getinnerframes",
      "abstract": "Get a list of records for a traceback's frame and all lower frames.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getinnerframes"
        },
        "meta": {
          "params": [
            "tb",
            "context"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getlineno",
      "abstract": "Get the line number from a frame object, allowing for optimization.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getlineno"
        },
        "meta": {
          "params": [
            "frame"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.currentframe",
      "abstract": "Return the frame of the caller or None if this is not possible.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "currentframe"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.stack",
      "abstract": "Return a list of records for the stack above the caller's frame.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "stack"
        },
        "meta": {
          "params": [
            "context"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.trace",
      "abstract": "Return a list of records for the stack below the current exception.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "trace"
        },
        "meta": {
          "params": [
            "context"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getattr_static",
      "abstract": "Retrieve attributes without triggering dynamic lookup via the",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getattr_static"
        },
        "meta": {
          "params": [
            "obj",
            "attr",
            "default"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            },
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.GEN_CREATED",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "GEN_CREATED"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.GEN_RUNNING",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "GEN_RUNNING"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.GEN_SUSPENDED",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "GEN_SUSPENDED"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.GEN_CLOSED",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "GEN_CLOSED"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getgeneratorstate",
      "abstract": "Get current state of a generator-iterator.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getgeneratorstate"
        },
        "meta": {
          "params": [
            "generator"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CORO_CREATED",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CORO_CREATED"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CORO_RUNNING",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CORO_RUNNING"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CORO_SUSPENDED",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CORO_SUSPENDED"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.CORO_CLOSED",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_MEMBER",
        "properties": {
          "member": "CORO_CLOSED"
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getcoroutinestate",
      "abstract": "Get current state of a coroutine object.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getcoroutinestate"
        },
        "meta": {
          "params": [
            "coroutine"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getgeneratorlocals",
      "abstract": "    Get the mapping of generator local variables to their current values.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getgeneratorlocals"
        },
        "meta": {
          "params": [
            "generator"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.getcoroutinelocals",
      "abstract": "    Get the mapping of coroutine local variables to their current values.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "getcoroutinelocals"
        },
        "meta": {
          "params": [
            "coroutine"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.Attribute",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "Attribute"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    },
    {
      "key": "inspect.classify_class_attrs",
      "abstract": "Return list of attribute-descriptor tuples.",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "classify_class_attrs"
        },
        "meta": {
          "params": [
            "cls"
          ]
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": [
            {
              "type": "PY_ARG",
              "childSets": {
                "argument": [
                  {
                    "type": "PYTHON_EXPRESSION",
                    "properties": {},
                    "childSets": {
                      "tokens": []
                    }
                  }
                ]
              },
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "key": "inspect.ClassFoundException",
      "abstract": "",
      "serializedNode": {
        "type": "PYTHON_CALL_MEMBER",
        "properties": {
          "member": "ClassFoundException"
        },
        "meta": {
          "params": []
        },
        "childSets": {
          "object": [
            {
              "type": "PY_IDENTIFIER",
              "properties": {
                "identifier": "inspect"
              },
              "childSets": {}
            }
          ],
          "arguments": []
        }
      }
    }
  ]
}